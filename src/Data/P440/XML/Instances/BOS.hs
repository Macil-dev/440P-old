{-#LANGUAGE OverloadedStrings#-}
module Data.P440.XML.Instances.BOS where

import qualified Data.P440.Domain.BOS as BOS
import Data.P440.Domain.SimpleTypes
import Data.P440.Domain.ComplexTypes

import Data.P440.XML.XML
import qualified Data.P440.XML.Instances.ComplexTypes as C
import qualified Data.P440.XML.Instances.ComplexTypesZS as C

instance ToNode BOS.Файл where
    toNode (BOS.Файл идЭС версПрог телОтпр
                     должнОтпр фамОтпр справОстат) =
        complex "Файл"
                ["ИдЭС"      =: идЭС
                ,"ВерсПрог"  =: версПрог
                ,"ТелОтпр"   =: телОтпр
                ,"ДолжнОтпр" =: должнОтпр
                ,"ФамОтпр"   =: фамОтпр]
                [Single справОстат]

instance ToNode BOS.СправОстат where
    toNode (BOS.СправОстат номСправ датаСправ номЗР датаПодпЗР
                           наимПодтв призНал датаПодп свНО свБанкИлиУБР
                           плЮЛИлиПлФЛ остСчет остЭДС остВклад отсутствуют
                           предБанка) =
        complex "СправОстат"
                ["НомСправ"   =: номСправ
                ,"ДатаСправ"  =: датаСправ
                ,"НомЗР"      =: номЗР
                ,"ДатаПодпЗР" =: датаПодпЗР
                ,"НаимПодтв"  =: наимПодтв
                ,"ПризНал"    =: призНал
                ,"ДатаПодп"   =: датаПодп]
                [Single   $ C.свНО "СвНО" свНО
                ,Single   $ свБанкИлиУБР
                ,Single   $ плЮЛИлиПлФЛ
                ,Sequence $ остСчет
                ,Sequence $ остЭДС
                ,Sequence $ остВклад
                ,Sequence $ отсутствуют
                ,Single   $ C.предБ "ПредБанка" предБанка]

instance ToNode BOS.ПлЮЛИлиПлФЛ where
    toNode (BOS.ПлЮЛ' плюл) = C.плЮЛ "ПлЮЛ" плюл
    toNode (BOS.ПлФЛ' плфл) = C.плФЛ "ПлФЛ" плфл

instance ToNode BOS.ОстСч where
    toNode (BOS.ОстСч номСч видСч датаОткрСч
                      датаЗакрСч кодВалСч остатокСч) =
        complex_ "ОстСч"
                 ["НомСч"    =: номСч
                 ,"ВидСч"    =: видСч
                 ,"ДатаОткр" =: датаОткрСч
                 ,"ДатаЗакр" =: датаЗакрСч
                 ,"КодВал"   =: кодВалСч
                 ,"Остаток"  =: остатокСч]

instance ToNode BOS.ОстВклад where
    toNode (BOS.ОстВклад номВкл видВкл кодВалВклад датаОткрВклад датаИстВклад
                     датаЗакрВклад суммаВкл проценты остатокВклад) =
        complex_ "ОстВклад"
                 ["НомВкл"   =: номВкл
                 ,"ВидВкл"   =: видВкл
                 ,"КодВал"   =: кодВалВклад
                 ,"ДатаОткр" =: датаОткрВклад
                 ,"ДатаИст"  =: датаИстВклад
                 ,"ДатаЗакр" =: датаЗакрВклад
                 ,"СуммаВкл" =: суммаВкл
                 ,"Проценты" =: проценты
                 ,"Остаток"  =: остатокВклад]

instance ToNode BOS.ОстЭДС where
    toNode (BOS.ОстЭДС идЭСП датаОткрЭДС датаЗакрЭДС
                       кодВалЭДС остатокЭДС) =
        complex_ "ОстЭДС"
                 ["ИдЭСП"    =: идЭСП
                 ,"ДатаОткр" =: датаОткрЭДС
                 ,"ДатаЗакр" =: датаЗакрЭДС
                 ,"КодВал"   =: кодВалЭДС
                 ,"Остаток"  =: остатокЭДС]

instance ToNode BOS.Отсутствуют where
  toNode (BOS.Отсутствуют номер) =
      complex_ "Отсутствуют"
               ["Номер" =: номер]
